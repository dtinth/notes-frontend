{
  "runtime": "vue3",
  "html": "<div><p><strong>How about some interactivity inside a <a href=\"./AboutNotes.html\">note</a>?</strong></p><p><button disabled>0</button></p><p>...and here&#39;s the code that implements the above button:</p><div class=\"language-html vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" tabindex=\"0\"><code><span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&lt;</span><span style=\"--shiki-light:#22863A;--shiki-dark:#85E89D;\">p</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">  &lt;</span><span style=\"--shiki-light:#22863A;--shiki-dark:#85E89D;\">button</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\"> @click</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">=</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF;\">&quot;count++&quot;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\"> :disabled</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">=</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF;\">&quot;!mounted&quot;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&gt;{{count}}&lt;/</span><span style=\"--shiki-light:#22863A;--shiki-dark:#85E89D;\">button</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&lt;/</span><span style=\"--shiki-light:#22863A;--shiki-dark:#85E89D;\">p</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&lt;</span><span style=\"--shiki-light:#22863A;--shiki-dark:#85E89D;\">script</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\">  export</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\"> default</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\">    setup</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\">      const</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\"> count</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\"> Vue.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\">ref</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">(</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\">0</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\">      const</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\"> mounted</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\"> Vue.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\">ref</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">(</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\">false</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">      Vue.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\">onMounted</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">(() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\">=&gt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">        mounted.value </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\">=</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\"> true</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">      });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583;\">      return</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\"> { hello: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF;\">&quot;Hello, World&quot;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">, count, mounted };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">  };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&lt;/</span><span style=\"--shiki-light:#22863A;--shiki-dark:#85E89D;\">script</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\">&gt;</span></span></code></pre></div><p>Here&#39;s how it works:</p><ul><li>The server-side code first converts Markdown to HTML using <a href=\"https://www.npmjs.com/package/@vuepress/markdown\" target=\"_blank\" rel=\"noreferrer\"><code>@vuepress/markdown</code></a>. It automatically extracts out the <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> tags.</li><li>The HTML is then parsed as a Vue template and compiled into <a href=\"https://v2.vuejs.org/v2/guide/render-function.html\" target=\"_blank\" rel=\"noreferrer\">render functions</a> using <a href=\"https://www.npmjs.com/package/vue-template-compiler\" target=\"_blank\" rel=\"noreferrer\"><code>vue-template-compiler</code></a> as JavaScript source code.</li><li>The <code>&lt;script&gt;</code> tag is compiled using <a href=\"https://esbuild.github.io/\" target=\"_blank\" rel=\"noreferrer\">esbuild</a> into a JavaScript source code.</li><li>The resulting source codes are then used to assemble a Vue component. This happens both on the client and on the server. The server then renders a static HTML version of the component, and the client then hydrates it.</li></ul><figure slot=\"right\"><p><img src=\"https://static.dt.in.th/uploads/2022/07/24/vuecomp2.webp\" alt=\"\"></p><figcaption>The compilation process</figcaption></figure><hr><details><summary>Archive â€” How it works in the previous version of notes.dt.in.th (Nuxt-based)</summary><p>Here&#39;s how it works:</p><ul><li><p><strong>In the contents API,</strong> when the Markdown file is parsed, <code>@vuepress/markdown</code> automatically extracts out the <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> tags. I assume that there will be only one <code>&lt;script&gt;</code> tag. If one is found, then the contents of the <code>&lt;script&gt;</code> tag is compiled down to ES6 + CommonJS using <a href=\"https://esbuild.github.io/\" target=\"_blank\" rel=\"noreferrer\">esbuild</a>. This compiled JavaScript is then returned over the wire.</p></li><li><p><strong>In the Nuxt app,</strong> if a component module is included in the response, Nuxt will compile that code as part of the Vue component, on-the-fly, at runtime.</p></li></ul><p>This results in the following markup:</p><p><img src=\"https://static.dt.in.th/uploads/2020/12/11/journal-script-ssr.png\" alt=\"\"></p><p>For full changes, see the <a href=\"https://github.com/dtinth/notes.dt.in.th/pull/1/files\" target=\"_blank\" rel=\"noreferrer\">pull request</a>.</p></details></div>",
  "css": "/* No <style> tags present */",
  "js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Vue = require('vue');\n\n/* Analyzed bindings: {\n  \"hello\": \"setup-maybe-ref\",\n  \"count\": \"setup-maybe-ref\",\n  \"mounted\": \"setup-maybe-ref\"\n} */\n\nconst __sfc__ = {\n  setup() {\n    const count = Vue.ref(0);\n    const mounted = Vue.ref(false);\n    Vue.onMounted(() => {\n      mounted.value = true;\n    });\n    return { hello: 'Hello, World', count, mounted }\n  }\n}\n;\n\nconst _hoisted_1 = /*#__PURE__*/Vue.createElementVNode(\"p\", null, [\n  /*#__PURE__*/Vue.createElementVNode(\"strong\", null, [\n    /*#__PURE__*/Vue.createTextVNode(\"How about some interactivity inside a \"),\n    /*#__PURE__*/Vue.createElementVNode(\"a\", { href: \"./AboutNotes.html\" }, \"note\"),\n    /*#__PURE__*/Vue.createTextVNode(\"?\")\n  ])\n], -1 /* HOISTED */);\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = /*#__PURE__*/Vue.createStaticVNode(\"<p>...and here&#39;s the code that implements the above button:</p><div class=\\\"language-html vp-adaptive-theme\\\"><button title=\\\"Copy Code\\\" class=\\\"copy\\\"></button><span class=\\\"lang\\\">html</span><pre class=\\\"shiki shiki-themes github-light github-dark vp-code\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&lt;</span><span style=\\\"--shiki-light:#22863A;--shiki-dark:#85E89D;\\\">p</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">  &lt;</span><span style=\\\"--shiki-light:#22863A;--shiki-dark:#85E89D;\\\">button</span><span style=\\\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\\\"> @click</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">=</span><span style=\\\"--shiki-light:#032F62;--shiki-dark:#9ECBFF;\\\">&quot;count++&quot;</span><span style=\\\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\\\"> :disabled</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">=</span><span style=\\\"--shiki-light:#032F62;--shiki-dark:#9ECBFF;\\\">&quot;!mounted&quot;</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&gt;{{count}}&lt;/</span><span style=\\\"--shiki-light:#22863A;--shiki-dark:#85E89D;\\\">button</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&lt;/</span><span style=\\\"--shiki-light:#22863A;--shiki-dark:#85E89D;\\\">p</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&gt;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&lt;</span><span style=\\\"--shiki-light:#22863A;--shiki-dark:#85E89D;\\\">script</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\">  export</span><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\"> default</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\\\">    setup</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\">      const</span><span style=\\\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\\\"> count</span><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\"> =</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\"> Vue.</span><span style=\\\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\\\">ref</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">(</span><span style=\\\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\\\">0</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\">      const</span><span style=\\\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\\\"> mounted</span><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\"> =</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\"> Vue.</span><span style=\\\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\\\">ref</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">(</span><span style=\\\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\\\">false</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">      Vue.</span><span style=\\\"--shiki-light:#6F42C1;--shiki-dark:#B392F0;\\\">onMounted</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">(() </span><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\">=&gt;</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">        mounted.value </span><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\">=</span><span style=\\\"--shiki-light:#005CC5;--shiki-dark:#79B8FF;\\\"> true</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">      });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#D73A49;--shiki-dark:#F97583;\\\">      return</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\"> { hello: </span><span style=\\\"--shiki-light:#032F62;--shiki-dark:#9ECBFF;\\\">&quot;Hello, World&quot;</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">, count, mounted };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">    },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">  };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&lt;/</span><span style=\\\"--shiki-light:#22863A;--shiki-dark:#85E89D;\\\">script</span><span style=\\\"--shiki-light:#24292E;--shiki-dark:#E1E4E8;\\\">&gt;</span></span></code></pre></div><p>Here&#39;s how it works:</p><ul><li>The server-side code first converts Markdown to HTML using <a href=\\\"https://www.npmjs.com/package/@vuepress/markdown\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\"><code>@vuepress/markdown</code></a>. It automatically extracts out the <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> tags.</li><li>The HTML is then parsed as a Vue template and compiled into <a href=\\\"https://v2.vuejs.org/v2/guide/render-function.html\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">render functions</a> using <a href=\\\"https://www.npmjs.com/package/vue-template-compiler\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\"><code>vue-template-compiler</code></a> as JavaScript source code.</li><li>The <code>&lt;script&gt;</code> tag is compiled using <a href=\\\"https://esbuild.github.io/\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">esbuild</a> into a JavaScript source code.</li><li>The resulting source codes are then used to assemble a Vue component. This happens both on the client and on the server. The server then renders a static HTML version of the component, and the client then hydrates it.</li></ul><figure slot=\\\"right\\\"><p><img src=\\\"https://static.dt.in.th/uploads/2022/07/24/vuecomp2.webp\\\" alt=\\\"\\\"></p><figcaption>The compilation process</figcaption></figure><hr><details><summary>Archive â€” How it works in the previous version of notes.dt.in.th (Nuxt-based)</summary><p>Here&#39;s how it works:</p><ul><li><p><strong>In the contents API,</strong> when the Markdown file is parsed, <code>@vuepress/markdown</code> automatically extracts out the <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> tags. I assume that there will be only one <code>&lt;script&gt;</code> tag. If one is found, then the contents of the <code>&lt;script&gt;</code> tag is compiled down to ES6 + CommonJS using <a href=\\\"https://esbuild.github.io/\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">esbuild</a>. This compiled JavaScript is then returned over the wire.</p></li><li><p><strong>In the Nuxt app,</strong> if a component module is included in the response, Nuxt will compile that code as part of the Vue component, on-the-fly, at runtime.</p></li></ul><p>This results in the following markup:</p><p><img src=\\\"https://static.dt.in.th/uploads/2020/12/11/journal-script-ssr.png\\\" alt=\\\"\\\"></p><p>For full changes, see the <a href=\\\"https://github.com/dtinth/notes.dt.in.th/pull/1/files\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">pull request</a>.</p></details>\", 7);\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (Vue.openBlock(), Vue.createElementBlock(\"div\", null, [\n    _hoisted_1,\n    Vue.createElementVNode(\"p\", null, [\n      Vue.createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = $event => ($setup.count++)),\n        disabled: !$setup.mounted\n      }, Vue.toDisplayString($setup.count), 9 /* TEXT, PROPS */, _hoisted_2)\n    ]),\n    _hoisted_3\n  ]))\n}\n__sfc__.render = render;\n__sfc__.__file = \"Note.vue\";\n\nexports.default = __sfc__;\n",
  "frontmatter": {
    "public": true,
    "title": "Adding some interactivity to my notes",
    "aliases": [
      "20201211T195900Z2817"
    ]
  }
}